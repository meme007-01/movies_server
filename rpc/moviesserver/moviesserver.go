// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: server.proto

package moviesserver

import (
	"context"

	"movies/rpc/movies"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = movies.Request
	Response = movies.Response

	MoviesServer interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultMoviesServer struct {
		cli zrpc.Client
	}
)

func NewMoviesServer(cli zrpc.Client) MoviesServer {
	return &defaultMoviesServer{
		cli: cli,
	}
}

func (m *defaultMoviesServer) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := movies.NewMoviesServerClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
