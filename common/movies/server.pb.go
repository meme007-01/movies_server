// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: server.proto

package movies

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NavigationModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //ID
	Title      string             `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`           //标题
	Sort       int64              `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`            //排序
	SubNavList []*NavigationModel `protobuf:"bytes,4,rep,name=subNavList,proto3" json:"subNavList,omitempty"` //子级
}

func (x *NavigationModel) Reset() {
	*x = NavigationModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NavigationModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NavigationModel) ProtoMessage() {}

func (x *NavigationModel) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NavigationModel.ProtoReflect.Descriptor instead.
func (*NavigationModel) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

func (x *NavigationModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NavigationModel) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NavigationModel) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *NavigationModel) GetSubNavList() []*NavigationModel {
	if x != nil {
		return x.SubNavList
	}
	return nil
}

type GetNavigationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNavigationRequest) Reset() {
	*x = GetNavigationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNavigationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNavigationRequest) ProtoMessage() {}

func (x *GetNavigationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNavigationRequest.ProtoReflect.Descriptor instead.
func (*GetNavigationRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

type GetNavigationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*NavigationModel `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetNavigationResponse) Reset() {
	*x = GetNavigationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNavigationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNavigationResponse) ProtoMessage() {}

func (x *GetNavigationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNavigationResponse.ProtoReflect.Descriptor instead.
func (*GetNavigationResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

func (x *GetNavigationResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetNavigationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetNavigationResponse) GetData() []*NavigationModel {
	if x != nil {
		return x.Data
	}
	return nil
}

type MovieModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                        //                      `json:"id"`
	Title                 string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                   //                  `json:"title"` // 影片标题
	CategoryPid           int64  `protobuf:"varint,3,opt,name=categoryPid,proto3" json:"categoryPid,omitempty"`                      //             `json:"categoryPid"` // 分类一级id
	CategoryChildId       int64  `protobuf:"varint,4,opt,name=categoryChildId,proto3" json:"categoryChildId,omitempty"`              //        `json:"categoryChildId"` // 分类二级id
	SurfacePlot           string `protobuf:"bytes,5,opt,name=surfacePlot,proto3" json:"surfacePlot,omitempty"`                       //           `json:"surfacePlot"` // 影片封面图
	Recommend             int64  `protobuf:"varint,6,opt,name=recommend,proto3" json:"recommend,omitempty"`                          //          `json:"recommend"` // 是否推荐 1是 2否
	Cycle                 int64  `protobuf:"varint,7,opt,name=cycle,proto3" json:"cycle,omitempty"`                                  //                   `json:"cycle"` // 是否轮播 1是 2否
	CycleImg              string `protobuf:"bytes,8,opt,name=cycleImg,proto3" json:"cycleImg,omitempty"`                             //              `json:"cycleImg"` // 轮播图片
	ChargingMode          int64  `protobuf:"varint,9,opt,name=chargingMode,proto3" json:"chargingMode,omitempty"`                    //           `json:"chargingMode"` // 收费模式 1免费 2vip免费 3金币点播
	BuyMode               int64  `protobuf:"varint,10,opt,name=buyMode,proto3" json:"buyMode,omitempty"`                             //                `json:"buyMode"` // 购买模式 1按部 2按集
	Gold                  int64  `protobuf:"varint,11,opt,name=gold,proto3" json:"gold,omitempty"`                                   //             int64  `json:"gold"` // 金币点播值
	Directors             string `protobuf:"bytes,12,opt,name=directors,proto3" json:"directors,omitempty"`                          //           `json:"directors"` // 导演
	Actors                string `protobuf:"bytes,13,opt,name=actors,proto3" json:"actors,omitempty"`                                //        `json:"actors"` // 演员
	ImdbScore             int64  `protobuf:"varint,14,opt,name=imdbScore,proto3" json:"imdbScore,omitempty"`                         //            `json:"imdbScore"` // imd评分.百分制
	ImdbScoreId           string `protobuf:"bytes,15,opt,name=imdbScoreId,proto3" json:"imdbScoreId,omitempty"`                      //          `json:"imdbScoreId"` // imd评分ID
	DoubanScore           int64  `protobuf:"varint,16,opt,name=doubanScore,proto3" json:"doubanScore,omitempty"`                     //          `json:"doubanScore"` // 豆瓣评分.百分制
	DoubanScoreId         string `protobuf:"bytes,17,opt,name=doubanScoreId,proto3" json:"doubanScoreId,omitempty"`                  //          `json:"doubanScoreId"` // 豆瓣评分ID
	Introduce             string `protobuf:"bytes,18,opt,name=introduce,proto3" json:"introduce,omitempty"`                          //              `json:"introduce"` // 简介
	PopularityDay         int64  `protobuf:"varint,19,opt,name=popularityDay,proto3" json:"popularityDay,omitempty"`                 //          `json:"popularityDay"` // 日人气
	PopularityWeek        int64  `protobuf:"varint,20,opt,name=popularityWeek,proto3" json:"popularityWeek,omitempty"`               //          `json:"popularityWeek"` // 周人气
	PopularityMonth       int64  `protobuf:"varint,21,opt,name=popularityMonth,proto3" json:"popularityMonth,omitempty"`             //         `json:"popularityMonth"` // 月人气
	PopularitySum         int64  `protobuf:"varint,22,opt,name=popularitySum,proto3" json:"popularitySum,omitempty"`                 //        `json:"popularitySum"` // 总人气
	Note                  string `protobuf:"bytes,23,opt,name=note,proto3" json:"note,omitempty"`                                    //                  `json:"note"` // 连载状态
	Year                  string `protobuf:"bytes,24,opt,name=year,proto3" json:"year,omitempty"`                                    //                  `json:"year"` // 年份
	AlbumId               int64  `protobuf:"varint,25,opt,name=albumId,proto3" json:"albumId,omitempty"`                             //                `json:"albumId"` // 关联专题id
	Status                int64  `protobuf:"varint,26,opt,name=status,proto3" json:"status,omitempty"`                               //              `json:"status"` // 状态
	CreateAt              int64  `protobuf:"varint,27,opt,name=createAt,proto3" json:"createAt,omitempty"`                           //             `json:"create_at"`
	UpdateAt              int64  `protobuf:"varint,28,opt,name=updateAt,proto3" json:"updateAt,omitempty"`                           //               `json:"update_at"`
	Duration              int64  `protobuf:"varint,29,opt,name=duration,proto3" json:"duration,omitempty"`                           //             `json:"duration"` // 时长(单位s)
	Region                string `protobuf:"bytes,30,opt,name=region,proto3" json:"region,omitempty"`                                //               `json:"region"` // 自定义地区
	Language              string `protobuf:"bytes,31,opt,name=language,proto3" json:"language,omitempty"`                            //          `json:"language"` // 自定义语言
	Label                 string `protobuf:"bytes,32,opt,name=label,proto3" json:"label,omitempty"`                                  //         `json:"label"` // 自定义标签
	Number                int64  `protobuf:"varint,33,opt,name=number,proto3" json:"number,omitempty"`                               //         `json:"number"` // 总集数
	Total                 int64  `protobuf:"varint,34,opt,name=total,proto3" json:"total,omitempty"`                                 //         `json:"total"` // 更新集数
	HorizontalPoster      string `protobuf:"bytes,35,opt,name=horizontalPoster,proto3" json:"horizontalPoster,omitempty"`            //     `json:"horizontalPoster"` // 横屏海报
	VerticalPoster        string `protobuf:"bytes,36,opt,name=verticalPoster,proto3" json:"verticalPoster,omitempty"`                //         `json:"verticalPoster"` // 竖屏海报
	Publish               string `protobuf:"bytes,37,opt,name=publish,proto3" json:"publish,omitempty"`                              //              `json:"publish"` // 发行商
	SerialNumber          string `protobuf:"bytes,38,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`                    //           `json:"serialNumber"` // 序列号
	Screenshot            string `protobuf:"bytes,39,opt,name=screenshot,proto3" json:"screenshot,omitempty"`                        //          `json:"screenshot"` // 截屏
	Gif                   string `protobuf:"bytes,40,opt,name=gif,proto3" json:"gif,omitempty"`                                      //              `json:"gif"`
	Alias                 string `protobuf:"bytes,41,opt,name=alias,proto3" json:"alias,omitempty"`                                  //              `json:"alias"`
	ReleaseAt             int64  `protobuf:"varint,42,opt,name=releaseAt,proto3" json:"releaseAt,omitempty"`                         //           `json:"releaseAt"`
	ShelfAt               int64  `protobuf:"varint,43,opt,name=shelfAt,proto3" json:"shelfAt,omitempty"`                             //              `json:"shelfAt"`
	End                   int64  `protobuf:"varint,44,opt,name=end,proto3" json:"end,omitempty"`                                     //                  `json:"end"`
	Unit                  string `protobuf:"bytes,45,opt,name=unit,proto3" json:"unit,omitempty"`                                    //                  `json:"unit"`
	Watch                 int64  `protobuf:"varint,46,opt,name=watch,proto3" json:"watch,omitempty"`                                 //               `json:"watch"`
	CollectionId          int64  `protobuf:"varint,47,opt,name=collectionId,proto3" json:"collectionId,omitempty"`                   //           `json:"collection_id"`
	UseLocalImage         int64  `protobuf:"varint,48,opt,name=useLocalImage,proto3" json:"useLocalImage,omitempty"`                 //         `json:"useLocalImage"`
	TitlesTime            int64  `protobuf:"varint,49,opt,name=titlesTime,proto3" json:"titlesTime,omitempty"`                       //            `json:"titles_time"` // 片头时间
	TrailerTime           int64  `protobuf:"varint,50,opt,name=trailerTime,proto3" json:"trailerTime,omitempty"`                     //             `json:"trailerTime"` // 片尾时间
	SiteId                int64  `protobuf:"varint,51,opt,name=siteId,proto3" json:"siteId,omitempty"`                               //              `json:"siteId"` // 站点id
	CategoryPidStatus     int64  `protobuf:"varint,52,opt,name=categoryPidStatus,proto3" json:"categoryPidStatus,omitempty"`         //      `json:"categoryPidStatus"` // 顶级分类状态
	CategoryChildIdStatus int64  `protobuf:"varint,53,opt,name=categoryChildIdStatus,proto3" json:"categoryChildIdStatus,omitempty"` //   `json:"categoryChildIdStatus"` // 子级分类状态
	PlayUrl               string `protobuf:"bytes,54,opt,name=playUrl,proto3" json:"playUrl,omitempty"`                              //               `json:"playUrl"` // 采集的源地址
	PlayUrlPutIn          int64  `protobuf:"varint,55,opt,name=playUrlPutIn,proto3" json:"playUrlPutIn,omitempty"`                   //           `json:"playUrlPutIn"` // 播放地址是否入库1-已经入库
	TypeSort              int64  `protobuf:"varint,56,opt,name=typeSort,proto3" json:"typeSort,omitempty"`                           //类型排序
	TypeName              string `protobuf:"bytes,57,opt,name=typeName,proto3" json:"typeName,omitempty"`                            //类型名称
}

func (x *MovieModel) Reset() {
	*x = MovieModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieModel) ProtoMessage() {}

func (x *MovieModel) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieModel.ProtoReflect.Descriptor instead.
func (*MovieModel) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

func (x *MovieModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MovieModel) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MovieModel) GetCategoryPid() int64 {
	if x != nil {
		return x.CategoryPid
	}
	return 0
}

func (x *MovieModel) GetCategoryChildId() int64 {
	if x != nil {
		return x.CategoryChildId
	}
	return 0
}

func (x *MovieModel) GetSurfacePlot() string {
	if x != nil {
		return x.SurfacePlot
	}
	return ""
}

func (x *MovieModel) GetRecommend() int64 {
	if x != nil {
		return x.Recommend
	}
	return 0
}

func (x *MovieModel) GetCycle() int64 {
	if x != nil {
		return x.Cycle
	}
	return 0
}

func (x *MovieModel) GetCycleImg() string {
	if x != nil {
		return x.CycleImg
	}
	return ""
}

func (x *MovieModel) GetChargingMode() int64 {
	if x != nil {
		return x.ChargingMode
	}
	return 0
}

func (x *MovieModel) GetBuyMode() int64 {
	if x != nil {
		return x.BuyMode
	}
	return 0
}

func (x *MovieModel) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *MovieModel) GetDirectors() string {
	if x != nil {
		return x.Directors
	}
	return ""
}

func (x *MovieModel) GetActors() string {
	if x != nil {
		return x.Actors
	}
	return ""
}

func (x *MovieModel) GetImdbScore() int64 {
	if x != nil {
		return x.ImdbScore
	}
	return 0
}

func (x *MovieModel) GetImdbScoreId() string {
	if x != nil {
		return x.ImdbScoreId
	}
	return ""
}

func (x *MovieModel) GetDoubanScore() int64 {
	if x != nil {
		return x.DoubanScore
	}
	return 0
}

func (x *MovieModel) GetDoubanScoreId() string {
	if x != nil {
		return x.DoubanScoreId
	}
	return ""
}

func (x *MovieModel) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *MovieModel) GetPopularityDay() int64 {
	if x != nil {
		return x.PopularityDay
	}
	return 0
}

func (x *MovieModel) GetPopularityWeek() int64 {
	if x != nil {
		return x.PopularityWeek
	}
	return 0
}

func (x *MovieModel) GetPopularityMonth() int64 {
	if x != nil {
		return x.PopularityMonth
	}
	return 0
}

func (x *MovieModel) GetPopularitySum() int64 {
	if x != nil {
		return x.PopularitySum
	}
	return 0
}

func (x *MovieModel) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *MovieModel) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *MovieModel) GetAlbumId() int64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *MovieModel) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MovieModel) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *MovieModel) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *MovieModel) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MovieModel) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *MovieModel) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *MovieModel) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *MovieModel) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *MovieModel) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MovieModel) GetHorizontalPoster() string {
	if x != nil {
		return x.HorizontalPoster
	}
	return ""
}

func (x *MovieModel) GetVerticalPoster() string {
	if x != nil {
		return x.VerticalPoster
	}
	return ""
}

func (x *MovieModel) GetPublish() string {
	if x != nil {
		return x.Publish
	}
	return ""
}

func (x *MovieModel) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *MovieModel) GetScreenshot() string {
	if x != nil {
		return x.Screenshot
	}
	return ""
}

func (x *MovieModel) GetGif() string {
	if x != nil {
		return x.Gif
	}
	return ""
}

func (x *MovieModel) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *MovieModel) GetReleaseAt() int64 {
	if x != nil {
		return x.ReleaseAt
	}
	return 0
}

func (x *MovieModel) GetShelfAt() int64 {
	if x != nil {
		return x.ShelfAt
	}
	return 0
}

func (x *MovieModel) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *MovieModel) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *MovieModel) GetWatch() int64 {
	if x != nil {
		return x.Watch
	}
	return 0
}

func (x *MovieModel) GetCollectionId() int64 {
	if x != nil {
		return x.CollectionId
	}
	return 0
}

func (x *MovieModel) GetUseLocalImage() int64 {
	if x != nil {
		return x.UseLocalImage
	}
	return 0
}

func (x *MovieModel) GetTitlesTime() int64 {
	if x != nil {
		return x.TitlesTime
	}
	return 0
}

func (x *MovieModel) GetTrailerTime() int64 {
	if x != nil {
		return x.TrailerTime
	}
	return 0
}

func (x *MovieModel) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *MovieModel) GetCategoryPidStatus() int64 {
	if x != nil {
		return x.CategoryPidStatus
	}
	return 0
}

func (x *MovieModel) GetCategoryChildIdStatus() int64 {
	if x != nil {
		return x.CategoryChildIdStatus
	}
	return 0
}

func (x *MovieModel) GetPlayUrl() string {
	if x != nil {
		return x.PlayUrl
	}
	return ""
}

func (x *MovieModel) GetPlayUrlPutIn() int64 {
	if x != nil {
		return x.PlayUrlPutIn
	}
	return 0
}

func (x *MovieModel) GetTypeSort() int64 {
	if x != nil {
		return x.TypeSort
	}
	return 0
}

func (x *MovieModel) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

type RecommendList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BannerList []*MovieModel `protobuf:"bytes,1,rep,name=bannerList,proto3" json:"bannerList,omitempty"` // `json:"bannerList" dc:"banner数据"`
	List       []*MovieModel `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`             //      []MovieModel `json:"list" dc:"数据"`
	Type       int64         `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`            //              `json:"type" dc:"推荐页面0, 其他页面按分类id"`
	Name       string        `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`             //             `json:"name" dc:"分类名称,服务器直接定义"`
}

func (x *RecommendList) Reset() {
	*x = RecommendList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendList) ProtoMessage() {}

func (x *RecommendList) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendList.ProtoReflect.Descriptor instead.
func (*RecommendList) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4}
}

func (x *RecommendList) GetBannerList() []*MovieModel {
	if x != nil {
		return x.BannerList
	}
	return nil
}

func (x *RecommendList) GetList() []*MovieModel {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RecommendList) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RecommendList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 获取推荐页面信息
type GetRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRecommendRequest) Reset() {
	*x = GetRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendRequest) ProtoMessage() {}

func (x *GetRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendRequest.ProtoReflect.Descriptor instead.
func (*GetRecommendRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5}
}

type GetRecommendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //"消息"`
	Data    []*MovieModel `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`       //"数据"`
}

func (x *GetRecommendResponse) Reset() {
	*x = GetRecommendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendResponse) ProtoMessage() {}

func (x *GetRecommendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendResponse.ProtoReflect.Descriptor instead.
func (*GetRecommendResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6}
}

func (x *GetRecommendResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRecommendResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetRecommendResponse) GetData() []*MovieModel {
	if x != nil {
		return x.Data
	}
	return nil
}

type PlayLineModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                     //                    `db:"id"`
	VideoLineId  int64  `protobuf:"varint,2,opt,name=videoLineId,proto3" json:"videoLineId,omitempty"`   //  sql.NullInt64  `db:"video_line_id"` // 资源id
	VideoId      int64  `protobuf:"varint,3,opt,name=videoId,proto3" json:"videoId,omitempty"`           //      sql.NullInt64  `db:"video_id"`
	Name         string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                  //        string         `db:"name"`          // 名称
	Sort         int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`                 //        int64          `db:"sort"`          // 序号
	File         string `protobuf:"bytes,6,opt,name=file,proto3" json:"file,omitempty"`                  //       sql.NullString `db:"file"`          // 文件地址
	ChargingMode int64  `protobuf:"varint,7,opt,name=chargingMode,proto3" json:"chargingMode,omitempty"` //  int64          `db:"charging_mode"` // 收费模式 1免费 2vip免费 3金币点播
	Currency     int64  `protobuf:"varint,8,opt,name=currency,proto3" json:"currency,omitempty"`         //    int64          `db:"currency"`      // 金币数量
	SubTitle     string `protobuf:"bytes,9,opt,name=subTitle,proto3" json:"subTitle,omitempty"`          //    string         `db:"sub_title"`     // 副标题
	Status       int64  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`            //    int64          `db:"status"`
	CreateAt     int64  `protobuf:"varint,11,opt,name=createAt,proto3" json:"createAt,omitempty"`        //   int64          `db:"create_at"`
	UpdateAt     int64  `protobuf:"varint,12,opt,name=updateAt,proto3" json:"updateAt,omitempty"`        //    int64          `db:"update_at"`
	SiteId       int64  `protobuf:"varint,13,opt,name=siteId,proto3" json:"siteId,omitempty"`            //    int64          `db:"site_id"`     // 站点id
	Tag          string `protobuf:"bytes,14,opt,name=tag,proto3" json:"tag,omitempty"`                   //   string         `db:"tag"`         // 标识
	LiveSource   int64  `protobuf:"varint,15,opt,name=liveSource,proto3" json:"liveSource,omitempty"`    //  int64          `db:"live_source"` // 是否是直播源1-是 0-否
}

func (x *PlayLineModel) Reset() {
	*x = PlayLineModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayLineModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayLineModel) ProtoMessage() {}

func (x *PlayLineModel) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayLineModel.ProtoReflect.Descriptor instead.
func (*PlayLineModel) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7}
}

func (x *PlayLineModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlayLineModel) GetVideoLineId() int64 {
	if x != nil {
		return x.VideoLineId
	}
	return 0
}

func (x *PlayLineModel) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *PlayLineModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayLineModel) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *PlayLineModel) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *PlayLineModel) GetChargingMode() int64 {
	if x != nil {
		return x.ChargingMode
	}
	return 0
}

func (x *PlayLineModel) GetCurrency() int64 {
	if x != nil {
		return x.Currency
	}
	return 0
}

func (x *PlayLineModel) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *PlayLineModel) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PlayLineModel) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *PlayLineModel) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *PlayLineModel) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *PlayLineModel) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *PlayLineModel) GetLiveSource() int64 {
	if x != nil {
		return x.LiveSource
	}
	return 0
}

// 获取播放地址相关信息
type GetPlayLineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId int64 `protobuf:"varint,1,opt,name=videoId,proto3" json:"videoId,omitempty"` //视频ID
}

func (x *GetPlayLineRequest) Reset() {
	*x = GetPlayLineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayLineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayLineRequest) ProtoMessage() {}

func (x *GetPlayLineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayLineRequest.ProtoReflect.Descriptor instead.
func (*GetPlayLineRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{8}
}

func (x *GetPlayLineRequest) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type GetPlayLineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //"消息"`
	Data    []*PlayLineModel `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`       //"数据"`
}

func (x *GetPlayLineResponse) Reset() {
	*x = GetPlayLineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayLineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayLineResponse) ProtoMessage() {}

func (x *GetPlayLineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayLineResponse.ProtoReflect.Descriptor instead.
func (*GetPlayLineResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{9}
}

func (x *GetPlayLineResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPlayLineResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPlayLineResponse) GetData() []*PlayLineModel {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_server_proto protoreflect.FileDescriptor

var file_server_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x84, 0x01, 0x0a, 0x0f, 0x4e, 0x61, 0x76, 0x69, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x4e, 0x61, 0x76, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x4e, 0x61, 0x76, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x16, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x72, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x76, 0x69,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xae, 0x0d, 0x0a, 0x0a, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x69, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f,
	0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x64, 0x62, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6d, 0x64, 0x62, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6d, 0x64, 0x62, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6d, 0x64, 0x62, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x61,
	0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x75, 0x62, 0x61, 0x6e,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x6f, 0x75, 0x62, 0x61, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6f,
	0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x44, 0x61, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x44, 0x61, 0x79,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x57, 0x65,
	0x65, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x6f, 0x70, 0x75,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x53, 0x75, 0x6d, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x6f, 0x70, 0x75, 0x6c,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x53, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x22, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a,
	0x0a, 0x10, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f,
	0x6e, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x26, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x66, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67,
	0x69, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x29, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x41, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x65, 0x6c, 0x66, 0x41,
	0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x68, 0x65, 0x6c, 0x66, 0x41, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x61, 0x74, 0x63, 0x68, 0x18,
	0x2e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x61, 0x74, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x2f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x69, 0x6c, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x11, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x69, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x69, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34,
	0x0a, 0x15, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x49,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x18,
	0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x50, 0x75, 0x74, 0x49, 0x6e, 0x18, 0x37,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x50, 0x75, 0x74,
	0x49, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x38,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0a,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x03, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x69,
	0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x4c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x2e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xef, 0x01, 0x0a, 0x0c, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x76,
	0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1a,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x4c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_rawDescOnce sync.Once
	file_server_proto_rawDescData = file_server_proto_rawDesc
)

func file_server_proto_rawDescGZIP() []byte {
	file_server_proto_rawDescOnce.Do(func() {
		file_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_rawDescData)
	})
	return file_server_proto_rawDescData
}

var file_server_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_server_proto_goTypes = []any{
	(*NavigationModel)(nil),       // 0: server.NavigationModel
	(*GetNavigationRequest)(nil),  // 1: server.GetNavigationRequest
	(*GetNavigationResponse)(nil), // 2: server.GetNavigationResponse
	(*MovieModel)(nil),            // 3: server.MovieModel
	(*RecommendList)(nil),         // 4: server.RecommendList
	(*GetRecommendRequest)(nil),   // 5: server.GetRecommendRequest
	(*GetRecommendResponse)(nil),  // 6: server.GetRecommendResponse
	(*PlayLineModel)(nil),         // 7: server.PlayLineModel
	(*GetPlayLineRequest)(nil),    // 8: server.GetPlayLineRequest
	(*GetPlayLineResponse)(nil),   // 9: server.GetPlayLineResponse
}
var file_server_proto_depIdxs = []int32{
	0, // 0: server.NavigationModel.subNavList:type_name -> server.NavigationModel
	0, // 1: server.GetNavigationResponse.data:type_name -> server.NavigationModel
	3, // 2: server.RecommendList.bannerList:type_name -> server.MovieModel
	3, // 3: server.RecommendList.list:type_name -> server.MovieModel
	3, // 4: server.GetRecommendResponse.data:type_name -> server.MovieModel
	7, // 5: server.GetPlayLineResponse.data:type_name -> server.PlayLineModel
	1, // 6: server.MoviesServer.GetNavigation:input_type -> server.GetNavigationRequest
	5, // 7: server.MoviesServer.GetRecommend:input_type -> server.GetRecommendRequest
	8, // 8: server.MoviesServer.GetPlayLine:input_type -> server.GetPlayLineRequest
	2, // 9: server.MoviesServer.GetNavigation:output_type -> server.GetNavigationResponse
	6, // 10: server.MoviesServer.GetRecommend:output_type -> server.GetRecommendResponse
	9, // 11: server.MoviesServer.GetPlayLine:output_type -> server.GetPlayLineResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_server_proto_init() }
func file_server_proto_init() {
	if File_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NavigationModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetNavigationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetNavigationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MovieModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RecommendList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetRecommendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PlayLineModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetPlayLineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetPlayLineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_proto_goTypes,
		DependencyIndexes: file_server_proto_depIdxs,
		MessageInfos:      file_server_proto_msgTypes,
	}.Build()
	File_server_proto = out.File
	file_server_proto_rawDesc = nil
	file_server_proto_goTypes = nil
	file_server_proto_depIdxs = nil
}
