// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: server.proto

package moviesserver

import (
	"context"
	"movies_server/common/movies"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetNavigationRequest  = movies.GetNavigationRequest
	GetNavigationResponse = movies.GetNavigationResponse
	GetPlayLineRequest    = movies.GetPlayLineRequest
	GetPlayLineResponse   = movies.GetPlayLineResponse
	GetRecommendRequest   = movies.GetRecommendRequest
	GetRecommendResponse  = movies.GetRecommendResponse
	MovieModel            = movies.MovieModel
	NavigationModel       = movies.NavigationModel
	PlayLineModel         = movies.PlayLineModel
	RecommendList         = movies.RecommendList

	MoviesServer interface {
		GetNavigation(ctx context.Context, in *GetNavigationRequest, opts ...grpc.CallOption) (*GetNavigationResponse, error)
		GetRecommend(ctx context.Context, in *GetRecommendRequest, opts ...grpc.CallOption) (*GetRecommendResponse, error)
		GetPlayLine(ctx context.Context, in *GetPlayLineRequest, opts ...grpc.CallOption) (*GetPlayLineResponse, error)
	}

	defaultMoviesServer struct {
		cli zrpc.Client
	}
)

func NewMoviesServer(cli zrpc.Client) MoviesServer {
	return &defaultMoviesServer{
		cli: cli,
	}
}

func (m *defaultMoviesServer) GetNavigation(ctx context.Context, in *GetNavigationRequest, opts ...grpc.CallOption) (*GetNavigationResponse, error) {
	client := movies.NewMoviesServerClient(m.cli.Conn())
	return client.GetNavigation(ctx, in, opts...)
}

func (m *defaultMoviesServer) GetRecommend(ctx context.Context, in *GetRecommendRequest, opts ...grpc.CallOption) (*GetRecommendResponse, error) {
	client := movies.NewMoviesServerClient(m.cli.Conn())
	return client.GetRecommend(ctx, in, opts...)
}

func (m *defaultMoviesServer) GetPlayLine(ctx context.Context, in *GetPlayLineRequest, opts ...grpc.CallOption) (*GetPlayLineResponse, error) {
	client := movies.NewMoviesServerClient(m.cli.Conn())
	return client.GetPlayLine(ctx, in, opts...)
}
